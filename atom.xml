<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时秋的博客</title>
  <subtitle>林道秋不尽，悠悠满黄昏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shiqiupp.github.io/"/>
  <updated>2017-04-25T10:57:10.406Z</updated>
  <id>https://shiqiupp.github.io/</id>
  
  <author>
    <name>时秋</name>
    <email>shiqiu-beta@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql隐式转换</title>
    <link href="https://shiqiupp.github.io/2017/04/25/mysql-implicit-conversions/"/>
    <id>https://shiqiupp.github.io/2017/04/25/mysql-implicit-conversions/</id>
    <published>2017-04-25T08:58:05.000Z</published>
    <updated>2017-04-25T10:57:10.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用mysql过程中，可能经常遇到两类问题：</p>
<ul>
<li>这个字段明明有索引，但是查询依然很慢，执行计划竟然不走索引？？？</li>
<li>这个sql看起来没什么问题，为什么就是没有拿到预期的数据？mysql出bug了？</li>
</ul>
<p>这时候不妨停下来思考一下，是不是查询条件的数据类型和表字段类型不匹配，mysql执行时发生了隐式转换，可以通过 show warnings; 看看是否有警告。</p>
<h1 id="转换潜规则"><a href="#转换潜规则" class="headerlink" title="转换潜规则"></a>转换潜规则</h1><p>先去官方文档看看隐式转换的潜规则：<a href="https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html" target="_blank" rel="external">官方文档</a><br>摘取片段：</p>
<blockquote>
<p>The following rules describe how conversion occurs for comparison operations:</p>
<ul>
<li>If one or both arguments are NULL, the result of the comparison is NULL, except for the NULL-safe &lt;=&gt; equality comparison operator. For NULL &lt;=&gt; NULL, the result is true. No conversion is needed.</li>
<li>If both arguments in a comparison operation are strings, they are compared as strings.</li>
<li>If both arguments are integers, they are compared as integers.</li>
<li>Hexadecimal values are treated as binary strings if not compared to a number.</li>
<li>If one of the arguments is a TIMESTAMP or DATETIME column and the other argument is a constant, the constant is converted to a timestamp before the comparison is performed. This is done to be more ODBC-friendly. Note that this is not done for the arguments to IN()! To be safe, always use complete datetime, date, or time strings when doing comparisons. For example, to achieve best results when using BETWEEN with date or time values, use CAST() to explicitly convert the values to the desired data type.</li>
<li>A single-row subquery from a table or tables is not considered a constant. For example, if a subquery returns an integer to be compared to a DATETIME value, the comparison is done as two integers. The integer is not converted to a temporal value. To compare the operands as DATETIME values, use CAST() to explicitly convert the subquery value to DATETIME.</li>
<li>If one of the arguments is a decimal value, comparison depends on the other argument. The arguments are compared as decimal values if the other argument is a decimal or integer value, or as floating-point values if the other argument is a floating-point value.</li>
<li>In all other cases, the arguments are compared as floating-point (real) numbers.</li>
</ul>
</blockquote>
<p>翻译过来就是：</p>
<blockquote>
<ul>
<li>两个参数至少有一个是 NULL 时，比较的结果也是 NULL，例外是使用 &lt;=&gt; 对两个 NULL 做比较时会返回 1，这两种情况都不需要做类型转换;</li>
<li>两个参数都是字符串，会按照字符串来比较，不做类型转换;</li>
<li>两个参数都是整数，按照整数来比较，不做类型转换;</li>
<li>十六进制的值和非数字做比较时，会被当做二进制串;</li>
<li>有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为 timestamp;</li>
<li>有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较;</li>
<li>所有其他情况下，两个参数都会被转换为浮点数再进行比较;</li>
</ul>
</blockquote>
<h1 id="实战的坑"><a href="#实战的坑" class="headerlink" title="实战的坑"></a>实战的坑</h1><p>先建一个表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `scores` (</div><div class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;id&apos;,</div><div class="line">  `name` varchar(20) COLLATE utf8_bin DEFAULT NULL COMMENT &apos;姓名&apos;,</div><div class="line">  `course` varchar(20) COLLATE utf8_bin DEFAULT NULL COMMENT &apos;课程&apos;,</div><div class="line">  `score` int(11) DEFAULT &apos;0&apos; COMMENT &apos;分数&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  KEY `idx_name_course` (`name`,`course`),</div><div class="line">  KEY `idx_course` (`course`),</div><div class="line">  KEY `idx_score` (`score`)</div><div class="line">) ENGINE=InnoDB   DEFAULT CHARSET=utf8 COLLATE=utf8_bin</div></pre></td></tr></table></figure></p>
<p>表中数据如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from  `scores`;</div><div class="line">+----+--------+--------+-------+</div><div class="line">| id | name   | course | score |</div><div class="line">+----+--------+--------+-------+</div><div class="line">|  1 | 张三   | 语文   |    89 |</div><div class="line">|  2 | 张三   | 数学   |    79 |</div><div class="line">|  3 | 张三   | 英语   |    96 |</div><div class="line">|  4 | 李四   | 语文   |    90 |</div><div class="line">|  5 | 李四   | 数学   |    85 |</div><div class="line">|  6 | 李四   | 英语   |    94 |</div><div class="line">|  7 | 王五   | 语文   |    87 |</div><div class="line">|  8 | 王五   | 英语   |    94 |</div><div class="line">|  9 | 11aaa  | 语文   |   100 |</div><div class="line">| 10 | 11bbb | 数学   |    89 |</div><div class="line">+----+--------+--------+-------+</div><div class="line">10 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>注意varchar和int之间的参数转换：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from  `scores` where name = 0;</div><div class="line">+----+--------+--------+-------+</div><div class="line">| id | name   | course | score |</div><div class="line">+----+--------+--------+-------+</div><div class="line">|  1 | 张三   | 语文   |    89 |</div><div class="line">|  2 | 张三   | 数学   |    79 |</div><div class="line">|  3 | 张三   | 英语   |    96 |</div><div class="line">|  4 | 李四   | 语文   |    90 |</div><div class="line">|  5 | 李四   | 数学   |    85 |</div><div class="line">|  6 | 李四   | 英语   |    94 |</div><div class="line">|  7 | 王五   | 语文   |    87 |</div><div class="line">|  8 | 王五   | 英语   |    94 |</div><div class="line">+----+--------+--------+-------+</div><div class="line">8 rows in set, 10 warnings (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show warnings;</div><div class="line">+---------+------+--------------------------------------------+</div><div class="line">| Level   | Code | Message                                    |</div><div class="line">+---------+------+--------------------------------------------+</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;张三&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;张三&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;张三&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;李四&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;李四&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;李四&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;王五&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;王五&apos;   |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;11aaa&apos;  |</div><div class="line">| Warning | 1292 | Truncated incorrect DOUBLE value: &apos;11bbb&apos; |</div><div class="line">+---------+------+--------------------------------------------+</div><div class="line">10 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from  `scores` where name = 11;</div><div class="line">+----+-------+--------+-------+</div><div class="line">| id | name  | course | score |</div><div class="line">+----+-------+--------+-------+</div><div class="line">|  9 | 11aaa | 语文   |   100 |</div><div class="line">| 10 | 11bbb | 数学   |    89 |</div><div class="line">+----+-------+--------+-------+</div><div class="line">2 rows in set, 10 warnings (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from  `scores` where name = 11 + &apos;aaa&apos;;</div><div class="line">+----+-------+--------+-------+</div><div class="line">| id | name  | course | score |</div><div class="line">+----+-------+--------+-------+</div><div class="line">|  9 | 11aaa | 语文   |   100 |</div><div class="line">| 10 | 11bbb | 数学   |    89 |</div><div class="line">+----+-------+--------+-------+</div><div class="line">2 rows in set, 11 warnings (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from  `scores` where name = &apos;11&apos; + &apos;aaa&apos;;</div><div class="line">+----+-------+--------+-------+</div><div class="line">| id | name  | course | score |</div><div class="line">+----+-------+--------+-------+</div><div class="line">|  9 | 11aaa | 语文   |   100 |</div><div class="line">| 10 | 11bbb | 数学   |    89 |</div><div class="line">+----+-------+--------+-------+</div><div class="line">2 rows in set, 11 warnings (0.00 sec)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>此时已经发生隐式转换了；满足上述最后一条，name字段和int比较，name字段转换成浮点数，转换后再去比较。</p>
</blockquote>
<p>但是上面的转换结果很令人匪夷所思啊？？？下面再来看栗子：</p>
<p>1.字符串转换的潜规则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &apos;张三&apos; + 1;</div><div class="line">+--------------+</div><div class="line">| &apos;张三&apos; + 1   |</div><div class="line">+--------------+</div><div class="line">|            1 |</div><div class="line">+--------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>根据官方文档：</p>
<blockquote>
<p>When an operator is used with operands of different types, type conversion occurs to make the operands compatible.<br>当一个操作符对应不同类型，那么类型转换主要为了使操作符兼容，并且按照之前隐式转换规则来，所以上述sql中字符串被转成浮点数进行求和，’张三’被转成0；</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &apos;1sss&apos; + 1;</div><div class="line">+------------+</div><div class="line">| &apos;1sss&apos; + 1 |</div><div class="line">+------------+</div><div class="line">|          2 |</div><div class="line">+------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;sss1&apos; + 1;</div><div class="line">+------------+</div><div class="line">| &apos;sss1&apos; + 1 |</div><div class="line">+------------+</div><div class="line">|          1 |</div><div class="line">+------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;sss1&apos; + &apos;1&apos;;</div><div class="line">+--------------+</div><div class="line">| &apos;sss1&apos; + &apos;1&apos; |</div><div class="line">+--------------+</div><div class="line">|            1 |</div><div class="line">+--------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;1sss&apos; + &apos;1&apos;;</div><div class="line">+--------------+</div><div class="line">| &apos;1sss&apos; + &apos;1&apos; |</div><div class="line">+--------------+</div><div class="line">|            2 |</div><div class="line">+--------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;1sss&apos; + &apos;sss1&apos;;</div><div class="line">+-----------------+</div><div class="line">| &apos;1sss&apos; + &apos;sss1&apos; |</div><div class="line">+-----------------+</div><div class="line">|               1 |</div><div class="line">+-----------------+</div><div class="line">1 row in set, 2 warnings (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;1sss&apos; + &apos;1sss&apos;;</div><div class="line">+-----------------+</div><div class="line">| &apos;1sss&apos; + &apos;1sss&apos; |</div><div class="line">+-----------------+</div><div class="line">|               2 |</div><div class="line">+-----------------+</div><div class="line">1 row in set, 2 warnings (0.00 sec)</div></pre></td></tr></table></figure>
<blockquote>
<p>If any of the operands of a +, -, /, *, % is a real or string value, the precision of the result is the precision of the operand with the maximum precision.</p>
</blockquote>
<p>看完上述几个例子，相信读者已经有一些感觉了；</p>
<blockquote>
<p>对于 +, -, /, *, % 面对的操作数主要为浮点数，对于字符串会进行隐式转换；更多信息见 <a href="https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html" target="_blank" rel="external">官方文档</a></p>
</blockquote>
<p>2.条件查询字符串和数字类型参数的比较：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &apos;1sss&apos; = 0;           </div><div class="line">+------------+                      </div><div class="line">| &apos;1sss&apos; = 0 |                      </div><div class="line">+------------+                      </div><div class="line">|          0 |                      </div><div class="line">+------------+                      </div><div class="line">1 row in set, 1 warning (0.00 sec)  </div><div class="line">                                    </div><div class="line">mysql&gt; select &apos;1sss&apos; = 1;           </div><div class="line">+------------+                      </div><div class="line">| &apos;1sss&apos; = 1 |                      </div><div class="line">+------------+                      </div><div class="line">|          1 |                      </div><div class="line">+------------+                      </div><div class="line">1 row in set, 1 warning (0.00 sec)  </div><div class="line">                                    </div><div class="line">mysql&gt; select &apos;sss1&apos; = 0;           </div><div class="line">+------------+                      </div><div class="line">| &apos;sss1&apos; = 0 |                      </div><div class="line">+------------+                      </div><div class="line">|          1 |                      </div><div class="line">+------------+                      </div><div class="line">1 row in set, 1 warning (0.00 sec)  </div><div class="line">                                    </div><div class="line">mysql&gt; select &apos;sss1&apos; = 1;           </div><div class="line">+------------+                      </div><div class="line">| &apos;sss1&apos; = 1 |                      </div><div class="line">+------------+                      </div><div class="line">|          0 |                      </div><div class="line">+------------+                      </div><div class="line">1 row in set, 1 warning (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>从上面的例子可以看出，当把字符串转为数字的时候，其实是从最左边开始处理的：</p>
<ul>
<li>如果字符串的第一个字符就是非数字的字符，那么转换为数字就是0；</li>
<li>如果字符串中都是数字，那么转换为数字就是整个字符串对应的数字；</li>
<li>如果字符串中存在非数字，那么转换为的数字就是开头的那些数字对应的值；</li>
</ul>
<p>3.浮点数转换要注意最大值和精度丢失问题：</p>
<blockquote>
<p>Comparisons that use floating-point numbers (or values that are converted to floating-point numbers) are approximate because such numbers are inexact. This might lead to results that appear inconsistent;<br>Such results can occur because the values are converted to floating-point numbers, which have only 53 bits of precision and are subject to rounding;</p>
</blockquote>
<p>在进行浮点数转换时，可能用科学计数法表示，然后再进行比较，由于精度丢失，导致不正确的结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &apos;9223372036854775807&apos; = 9223372036854775807;</div><div class="line">+---------------------------------------------+</div><div class="line">| &apos;9223372036854775807&apos; = 9223372036854775807 |</div><div class="line">+---------------------------------------------+</div><div class="line">|                                           1 |</div><div class="line">+---------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;9223372036854775807&apos; = 9223372036854775808;</div><div class="line">+---------------------------------------------+</div><div class="line">| &apos;9223372036854775807&apos; = 9223372036854775808 |</div><div class="line">+---------------------------------------------+</div><div class="line">|                                           1 |</div><div class="line">+---------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;9223372036854775808&apos; = 9223372036854775808;</div><div class="line">+---------------------------------------------+</div><div class="line">| &apos;9223372036854775808&apos; = 9223372036854775808 |</div><div class="line">+---------------------------------------------+</div><div class="line">|                                           1 |</div><div class="line">+---------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;9223372036854775808&apos; = 9223372036854775807;</div><div class="line">+---------------------------------------------+</div><div class="line">| &apos;9223372036854775808&apos; = 9223372036854775807 |</div><div class="line">+---------------------------------------------+</div><div class="line">|                                           1 |</div><div class="line">+---------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;922337203&apos; = 922337203;</div><div class="line">+-------------------------+</div><div class="line">| &apos;922337203&apos; = 922337203 |</div><div class="line">+-------------------------+</div><div class="line">|                       1 |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;922337203&apos; = 922337202;</div><div class="line">+-------------------------+</div><div class="line">| &apos;922337203&apos; = 922337202 |</div><div class="line">+-------------------------+</div><div class="line">|                       0 |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select &apos;9223372036854775808&apos; + 0.0;</div><div class="line">+-----------------------------+</div><div class="line">| &apos;9223372036854775808&apos; + 0.0 |</div><div class="line">+-----------------------------+</div><div class="line">|        9.223372036854776e18 |</div><div class="line">+-----------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在使用mysql过程中，可能经常遇到两类问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个字段明明有索引，但是查询依然很慢，执行计划竟然不走索引？？？&lt;
    
    </summary>
    
      <category term="mysql" scheme="https://shiqiupp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://shiqiupp.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java 文件读取</title>
    <link href="https://shiqiupp.github.io/2017/04/10/java-fileread/"/>
    <id>https://shiqiupp.github.io/2017/04/10/java-fileread/</id>
    <published>2017-04-10T09:32:46.000Z</published>
    <updated>2017-04-23T07:35:25.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在Java开发过程中，偶尔需要获取一个文件(最常见的就是获取配置文件)，但是经常遇到找不到文件的异常；通常有两种情况：</p>
<ol>
<li>文件路径不正确；</li>
<li>文件名不正确；</li>
</ol>
<p>绝大多数异常都是由文件路径不正确导致。但是文件路径应该怎么描述呢？再加上绝对路径，相对路径，想想头大，每次都是尝试好多遍都不一定能搞定；so，在此记录下关于Java中获取文件路径的方法。</p>
<h1 id="文件路径获取"><a href="#文件路径获取" class="headerlink" title="文件路径获取"></a>文件路径获取</h1><p>目前Java中获取文件路径主要有如下几种方式：<br>注：文中出现的 ‘Xxxx’ 为具体某个类名；操作系统为win7；</p>
<ol>
<li><p>Xxxx.class.getResource(“”)</p>
<blockquote>
<p>得到的是Xxxx.class类文件所在的文件目录(当前类文件的绝对URI目录)。如：file:/D:/Projects/path-study/target/classes/com/beta/study/<br>Xxxx.class.getResource(“”).getPath() 可以获取不带前缀的文件路径。如： /D:/Projects/path-study/target/classes/com/beta/study/</p>
</blockquote>
</li>
<li><p>Xxxx.class.getResource(“/“)</p>
<blockquote>
<p>得到的是Xxxx.class类文件所在的类文件根目录(当前类文件classpath的绝对URI目录)。如：file:/D:/Projects/path-study/target/classes/<br>Xxxx.class.getResource(“/“).getPath() 可以获取不带前缀的文件路径。如： /D:/Projects/path-study/target/classes/</p>
</blockquote>
</li>
<li><p>Xxxx.class.getClassLoader().getResource(“”)</p>
<blockquote>
<p>注意此处getResource()参数中没有 / ，如果这样Xxxx.class.getClassLoader().getResource(“/“) 将得到null(jdk7，jdk8)<br>得到的是Xxxx.class类文件所在的类文件根目录(当前类文件classpath的绝对URI目录)。如：file:/D:/Projects/path-study/target/classes/<br>Xxxx.class.getClassLoader().getResource(“/“).getPath() 可以获取不带前缀的文件路径。如： /D:/Projects/path-study/target/classes/</p>
</blockquote>
</li>
<li><p>ClassLoader.getSystemResource(“”)</p>
<blockquote>
<p>getSystemResource()参数中没有 / ，如果这样ClassLoader.getSystemResource(“”) 将得到null(jdk7，jdk8)<br>得到的是当前类文件classpath的绝对URI目录。如：file:/D:/Projects/path-study/target/classes/<br>ClassLoader.getSystemResource(“”).getPath() 可以获取不带前缀的文件路径。如： /D:/Projects/path-study/target/classes/</p>
</blockquote>
</li>
<li><p>Thread.currentThread().getContextClassLoader().getResource(“”)</p>
<blockquote>
<p>得到的是当前类文件classpath的绝对URI目录。如：file:/D:/Projects/path-study/target/classes/<br>Thread.currentThread().getContextClassLoader ().getResource(“”).getPath() 可以获取不带前缀的文件路径。如： /D:/Projects/path-study/target/classes/</p>
</blockquote>
</li>
<li><p>System.getProperty(“java.class.path”)</p>
<blockquote>
<p>获取java -classpath 执行参数指定下的路径。默认为执行时当前CLASS_PATH环境变量；<br>如果用java -classpath “D:\Projects” Xxxx  ; 那么结果为：D:\Projects ；注意要保证 Xxxx.class 在 D:\Projects 下面；</p>
</blockquote>
</li>
</ol>
<h1 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h1><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><p>文件读取一般有两种方式：</p>
<p>1.使用jdk的File api ：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">File file = <span class="keyword">new</span> File(<span class="string">"文件路径"</span>);</div></pre></td></tr></table></figure></p>
<p>File构造函数参数为文件的路径，可以是绝对路径(如：D:/Projects/path-study/target/classes/test.properties)，也可以是相对路径(test.properties)；<br>如果是相对路径，那么jdk会根据user.dir属性值+相对路径作为文件的路径；系统属性 user.dir是JVM启动的时候设置的，通常是 Java 虚拟机的调用目录，即执行java命令所在的目录；<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//如果当前工作目录为D:/Projects/path-study  那么下面代码等价</span></div><div class="line">File file = <span class="keyword">new</span> File(<span class="string">"test.properties"</span>);</div><div class="line"></div><div class="line"><span class="comment">// 等价于(其中System.getProperty("user.dir") = D:/Projects/path-study)：</span></div><div class="line">File file = <span class="keyword">new</span> File(System.getProperty(<span class="string">"user.dir"</span>) + <span class="string">"/test.properties"</span>);</div></pre></td></tr></table></figure></p>
<p>so，用File读取文件有隐藏的路径含义，对于实际项目，开发和线上部署环境经常不同，如果用 File file = new File(“文件路径”);来读取文件，那么文件路径将会很头大，所以可以采用其他方式读取，降低FileNotFoundException出现的概率；当然也可以通过上述路径获取方式来获取文件的路径前缀，但是显得不够直接，容易出问题；</p>
<p>2.使用Class.getResource()或ClassLoader.getResource()<br>ClassLoader.getResource() 其中ClassLoader与如下两种也等价：</p>
<ul>
<li>Xxxx.class.getClassLoader()</li>
<li>Thread.currentThread().getContextClassLoader()</li>
</ul>
<p>假设Xxxx.class当前目录为：D:/Projects/path-study/target/classes/com/beta/study/<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Xxxx.class.getResource(<span class="string">"test.properties"</span>);  <span class="comment">//读取D:/Projects/path-study/target/classes/com/beta/study/test.properties或者其他jar中com/beta/study/test.properties</span></div><div class="line">Xxxx.class.getResource(<span class="string">"/test.properties"</span>);  <span class="comment">//读取D:/Projects/path-study/target/classes/test.properties或者其他jar中test.properties</span></div><div class="line">        </div><div class="line">Xxxx.class.getClassLoader().getResource(<span class="string">"test.properties"</span>);  <span class="comment">//读取D:/Projects/path-study/target/classes/test.properties或者其他jar中test.properties</span></div></pre></td></tr></table></figure></p>
<ul>
<li>Class.getResource()有2种方式，绝对路径和相对路径。绝对路径以/开头，从classpath或jar包根目录下开始搜索；相对路径是相对当前class所在的目录，允许使用..或.来定位文件。</li>
<li>ClassLoader.getResource()只能使用绝对路径，而且不用以/开头。</li>
</ul>
<p>这两种方式读取资源文件，不会依赖于user.dir，也不会依赖于具体部署的环境，是推荐的做法。</p>
<p>我现在要读取其他jar中的文件，怎么办呢？？？<br>实际上上述两种方式使用相对路径或绝对路径都能读取本jar或其他jar中的资源文件。但区别是，读取本jar包中的文件支持..这种写法，但是不能通过..读取其他jar下的文件。<br>假设Xxxx.class的包路径为：com.beta.study，那么：</p>
<blockquote>
<p>Xxxx.class.getResource(“test.properties”);<br>读取com/beta/study/test.properties 的文件，无论是本jar，还是其他jar中的文件；只要保证相对路径一致；<br>也可以采用如下方式读取：<br>Xxxx.class.getResource(“/com/beta/study/test.properties”);<br>Xxxx.class.getClassLoader().getResource(“com/beta/study/test.properties”);</p>
</blockquote>
<h2 id="代码实战"><a href="#代码实战" class="headerlink" title="代码实战"></a>代码实战</h2><p>读取文件采用java的io流。根据上述背景知识，获取java stream的方式主要有：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//方式1：</span></div><div class="line"><span class="comment">//Xxxx.class.getClassLoader().getResource("test.properties");  返回值也是java.net.URL，两种都行</span></div><div class="line">java.net.URL url = Xxxx.class.getResource(<span class="string">"test.properties"</span>);</div><div class="line">InputStream in = url.openStream() ;</div><div class="line"></div><div class="line"><span class="comment">//方式2：其实getResourceAsStream底层实现和上述基本一致</span></div><div class="line"><span class="comment">//Xxxx.class.getClassLoader().getResourceAsStream("test.properties");  返回值也是java.net.URL，两种都行</span></div><div class="line">InputStream in = Xxxx.class.getResourceAsStream(<span class="string">"test.properties"</span>);</div></pre></td></tr></table></figure></p>
<p>文件读取只要有如下方式：</p>
<ul>
<li>按字符读取</li>
<li>按字节读取</li>
<li>按行读取</li>
</ul>
<blockquote>
<p>如下文件读取未对null判断，未对异常进行处理，实际实战需要进行处理。</p>
</blockquote>
<p>1.按字符读取<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">InputStream inputStream = Xxxx.class.getResourceAsStream(<span class="string">"test.properties"</span>);</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">int</span> tempbyte;</div><div class="line">    StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line">    <span class="keyword">while</span> ( ( tempbyte = inputStream.read() ) != -<span class="number">1</span> ) &#123;</div><div class="line">        <span class="keyword">char</span>[] ch = Character.toChars(tempbyte);</div><div class="line">        stringBuilder.append(ch);</div><div class="line">    &#125;</div><div class="line">    System.out.println(stringBuilder);</div><div class="line"></div><div class="line">    inputStream.close();</div><div class="line"></div><div class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;&#125;</div></pre></td></tr></table></figure></p>
<p>2.按字节读取<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">InputStream inputStream = Xxxx.class.getResourceAsStream(<span class="string">"test.properties"</span>);</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">int</span> size = <span class="number">1024</span>;</div><div class="line">    <span class="keyword">byte</span>[] readbytes = <span class="keyword">new</span> <span class="keyword">byte</span>[size];</div><div class="line">    StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line">    <span class="keyword">int</span> readSize = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> ( (readSize = inputStream.read(readbytes,<span class="number">0</span>,size)  ) != -<span class="number">1</span> ) &#123;</div><div class="line">        stringBuilder.append(<span class="keyword">new</span> String(readbytes,<span class="number">0</span>,readSize));</div><div class="line">    &#125;</div><div class="line">    System.out.println(stringBuilder);</div><div class="line"></div><div class="line">    inputStream.close();</div><div class="line"></div><div class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;&#125;</div></pre></td></tr></table></figure></p>
<p>3.按行读取<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">InputStream inputStream = Xxxx.class.getResourceAsStream(<span class="string">"test.properties"</span>);</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream, <span class="string">"utf-8"</span>));</div><div class="line">    StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line">    String line;</div><div class="line">    <span class="keyword">while</span> ( (line = br.readLine())  != <span class="keyword">null</span>  ) &#123;</div><div class="line">        stringBuilder.append(line);</div><div class="line">    &#125;</div><div class="line">    System.out.println(stringBuilder);</div><div class="line"></div><div class="line">    inputStream.close();</div><div class="line">    </div><div class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在Java开发过程中，偶尔需要获取一个文件(最常见的就是获取配置文件)，但是经常遇到找不到文件的异常；通常有两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;
    
    </summary>
    
      <category term="Java" scheme="https://shiqiupp.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://shiqiupp.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 多数据源实例</title>
    <link href="https://shiqiupp.github.io/2017/04/01/springboot-multi-datasources/"/>
    <id>https://shiqiupp.github.io/2017/04/01/springboot-multi-datasources/</id>
    <published>2017-04-01T01:12:01.870Z</published>
    <updated>2017-04-11T07:32:52.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h1><p>大多数时候，一个项目不仅依赖一个数据源，往往需要多个数据源。如果项目使用SpringBoot+Mybatis结合进行数据持久层，在不采用传统的配置文件情况下，怎么通过注解的方式配置多个数据源呢？下面一一道来。<br>如果读者还没有springboot的项目，推荐官方demo搭建平台：<a href="https://start.spring.io/" target="_blank" rel="external">https://start.spring.io/</a><br>完整代码详见：<a href="https://github.com/shiqiupp/spring-boot-multi-datasources" target="_blank" rel="external">Github</a></p>
<h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><blockquote>
<p>jdk1.7  , SpringBoot : 1.5.2.RELEASE , 数据源采用dbcp2 commons-dbcp2 : 2.1.1</p>
</blockquote>
<p>maven依赖如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;!-- Import dependency management from Spring Boot --&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;</div><div class="line">    &lt;type&gt;pom&lt;/type&gt;</div><div class="line">    &lt;scope&gt;import&lt;/scope&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;</div><div class="line">    &lt;exclusions&gt;</div><div class="line">        &lt;exclusion&gt;</div><div class="line">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class="line">        &lt;/exclusion&gt;</div><div class="line">        &lt;exclusion&gt;</div><div class="line">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;logback-core&lt;/artifactId&gt;</div><div class="line">        &lt;/exclusion&gt;</div><div class="line">    &lt;/exclusions&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;!-- log , 按需配置 --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.0.6&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;logback-core&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.0.6&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;!--  mybatis --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.2.0&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;commons-dbcp2&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;2.1.1&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;5.1.41&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>首先新建数据源配置文件(recources/datasource.properties)，主要内容可参考如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jdbc.driver=com.mysql.jdbc.Driver</div><div class="line">jdbc.url=jdbc:mysql:<span class="comment">//127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=true</span></div><div class="line">jdbc.username=root</div><div class="line">jdbc.password=xxxxxxxx</div><div class="line">jdbc.maxActive=<span class="number">2335</span></div><div class="line">jdbc.maxIdel=<span class="number">120</span></div></pre></td></tr></table></figure></p>
<h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><p>tips: 所有的bean最好有名字，后续通过注解依赖注入式，可根据名字指定注入对应的bean;</p>
<p>新增一个默认数据源配置的类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.sql.DataSource;</div><div class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSource;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</div><div class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</div><div class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</div><div class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</div><div class="line"></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:datasource.properties"</span>)<span class="comment">//指定配置文件的路径和名字，按照实际配置</span></div><div class="line"><span class="meta">@MapperScan</span>(basePackages =  DefaultDataSourceConfig.SCAN_PACKAGE , sqlSessionFactoryRef = <span class="string">"defaultSqlSessionFactory"</span> <span class="comment">/**  指定name=defaultSqlSessionFactory 的 sessionFactory **/</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultDataSourceConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">final</span> <span class="keyword">static</span> String SCAN_PACKAGE = <span class="string">"com.beta.study.mapper.jdbc"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String driver;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String url;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.password&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.maxActive&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxActive;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.maxIdel&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxIdel;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(name=<span class="string">"dataSource"</span>)</div><div class="line">    <span class="meta">@Primary</span> <span class="comment">// 多个数据源，一定要有有一个关键的数据源</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</div><div class="line">        BasicDataSource dataSource = <span class="keyword">new</span> BasicDataSource();</div><div class="line">        dataSource.setDriverClassName(driver);</div><div class="line">        dataSource.setUrl(url);</div><div class="line">        dataSource.setUsername(username);</div><div class="line">        dataSource.setPassword(password);</div><div class="line">        dataSource.setMaxConnLifetimeMillis(maxActive);</div><div class="line">        dataSource.setMaxIdle(maxIdel);</div><div class="line">        dataSource.setValidationQuery(<span class="string">"SELECT 1"</span>);</div><div class="line">        dataSource.setTestOnBorrow(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">return</span> dataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//这是配置数据源事务，不需要事务不需要配置</span></div><div class="line">    <span class="meta">@Bean</span>(name = <span class="string">"defaultTransactionManager"</span>)</div><div class="line">    <span class="meta">@Primary</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">defaultDataSourceTransactionManager</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(getDataSource());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(name = <span class="string">"defaultSqlSessionFactory"</span>)</div><div class="line">    <span class="meta">@Primary</span></div><div class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">defaultSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"dataSource"</span>)</span>DataSource dataSource  <span class="comment">/**@Qualifier指定注入name=dataSource 的数据源 **/</span>) <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">final</span> SqlSessionFactoryBean sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBean();</div><div class="line">        sessionFactory.setDataSource(dataSource);</div><div class="line">        <span class="keyword">return</span> sessionFactory.getObject();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>新增一个其他的数据源类（为了测试，两个数据源其实对应同一个数据库）：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.sql.DataSource;</div><div class="line"><span class="keyword">import</span> org.apache.commons.dbcp2.BasicDataSource;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</div><div class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</div><div class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</div><div class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:datasource.properties"</span>)</div><div class="line"><span class="meta">@MapperScan</span>(basePackages =  SecondDataSourceConfig.SCAN_PACKAGE , sqlSessionFactoryRef = <span class="string">"secondSqlSessionFactory"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondDataSourceConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">final</span> <span class="keyword">static</span> String SCAN_PACKAGE = <span class="string">"com.beta.study.mapper.secondjdbc"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String driver;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String url;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.username&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.password&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.maxActive&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxActive;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.maxIdel&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxIdel;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(name=<span class="string">"secondDataSource"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</div><div class="line">        BasicDataSource dataSource = <span class="keyword">new</span> BasicDataSource();</div><div class="line">        dataSource.setDriverClassName(driver);</div><div class="line">        dataSource.setUrl(url);</div><div class="line">        dataSource.setUsername(username);</div><div class="line">        dataSource.setPassword(password);</div><div class="line">        dataSource.setMaxConnLifetimeMillis(maxActive);</div><div class="line">        dataSource.setMaxIdle(maxIdel);</div><div class="line">        dataSource.setValidationQuery(<span class="string">"SELECT 1"</span>);</div><div class="line">        dataSource.setTestOnBorrow(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">return</span> dataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(name = <span class="string">"secondTransactionManager"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">defaultDataSourceTransactionManager</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(getDataSource());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(name = <span class="string">"secondSqlSessionFactory"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">defaultSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"secondDataSource"</span>)</span>DataSource dataSource) <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">final</span> SqlSessionFactoryBean sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBean();</div><div class="line">        sessionFactory.setDataSource(dataSource);</div><div class="line">        <span class="keyword">return</span> sessionFactory.getObject();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对应mapper的类，注意具体的package名<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.beta.study.mapper.jdbc;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> com.beta.study.User;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Result;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Results;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@Mapper</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>)</div><div class="line">    <span class="meta">@Results</span>(value = &#123;</div><div class="line">        <span class="meta">@Result</span>(id = <span class="keyword">true</span>,column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,jdbcType = JdbcType.INTEGER,javaType = Integer.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"user_name"</span>,property = <span class="string">"userName"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"nick"</span>,property = <span class="string">"nick"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"text"</span>,property = <span class="string">"text"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class)</div><div class="line">    &#125;)</div><div class="line">    <span class="function">List&lt;User&gt; <span class="title">getAllUsers</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">package</span> com.beta.study.mapper.secondjdbc;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> com.beta.study.User;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Result;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Results;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.type.JdbcType;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@Mapper</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SecondUserMapper</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>)</div><div class="line">    <span class="meta">@Results</span>(value = &#123;</div><div class="line">        <span class="meta">@Result</span>(id = <span class="keyword">true</span>,column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,jdbcType = JdbcType.INTEGER,javaType = Integer.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"user_name"</span>,property = <span class="string">"userName"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"nick"</span>,property = <span class="string">"nick"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class),</div><div class="line">        <span class="meta">@Result</span>(column = <span class="string">"text"</span>,property = <span class="string">"text"</span>,jdbcType = JdbcType.VARCHAR,javaType = String.class)</div><div class="line">    &#125;)</div><div class="line">    <span class="function">List&lt;User&gt; <span class="title">getAllUsers</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编写启动类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.beta.study;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        SpringApplication.run(Main.class, args);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>OK , 运行Main，不出意外，整个项目就跑起来了~<br>如果有疑问，欢迎咨询，邮箱：shiqiu-beta@qq.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;需求背景&quot;&gt;&lt;a href=&quot;#需求背景&quot; class=&quot;headerlink&quot; title=&quot;需求背景&quot;&gt;&lt;/a&gt;需求背景&lt;/h1&gt;&lt;p&gt;大多数时候，一个项目不仅依赖一个数据源，往往需要多个数据源。如果项目使用SpringBoot+Mybatis结合进行数据持久
    
    </summary>
    
      <category term="Java" scheme="https://shiqiupp.github.io/categories/Java/"/>
    
      <category term="SpringBoot" scheme="https://shiqiupp.github.io/categories/Java/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://shiqiupp.github.io/tags/Java/"/>
    
      <category term="SpringBoot" scheme="https://shiqiupp.github.io/tags/SpringBoot/"/>
    
      <category term="多数据源" scheme="https://shiqiupp.github.io/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://shiqiupp.github.io/2017/03/31/hello-world/"/>
    <id>https://shiqiupp.github.io/2017/03/31/hello-world/</id>
    <published>2017-03-31T03:06:19.723Z</published>
    <updated>2017-04-01T02:36:33.825Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎光临时秋的博客小站~<br>博客更新中………….<br>么么哒</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎光临时秋的博客小站~&lt;br&gt;博客更新中………….&lt;br&gt;么么哒&lt;/p&gt;

    
    </summary>
    
      <category term="hello" scheme="https://shiqiupp.github.io/categories/hello/"/>
    
    
  </entry>
  
</feed>
